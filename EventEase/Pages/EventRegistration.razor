@page "/eventregistration"
@inject SharedService sharedService
@inject UserService userService
@inject NotificationService notificationService
@inject LocalStorageService localStorageService

<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-6">
			<EditForm Model="registration" OnSubmit="HandleSubmit">
				<DataAnnotationsValidator />
				<ValidationSummary class="text-danger" />

				<div class="form-group">
					<label for="name">Name:</label>
					<InputText id="name" class="form-control" @bind-Value="registration.Name" />
				</div>
				<div class="form-group">
					<label for="email">Email:</label>
					<InputText id="email" class="form-control" @bind-Value="registration.Email" />
				</div>
				<button type="submit" class="btn btn-primary mt-3">Register</button>
			</EditForm>

			@if (validSubmit)
			{
				<div class="alert alert-success mt-4">
					Registration Successful
				</div>
			}

			@if (invalidSubmit)
			{
				<div class="alert alert-danger mt-4">
					Registration Invalid
				</div>
			}
		</div>
	</div>
</div>

@code {
	private RegistrationModel registration = new RegistrationModel();
	private bool validSubmit = false;
	private bool invalidSubmit = false;

	private async Task HandleSubmit(EditContext context)
	{
		validSubmit = false;
		invalidSubmit = false;

		if (context.Validate())
		{
			bool isOk = await userService.ValidateUserAsync(registration.Name, registration.Email);
			
			if (isOk)
			{
				validSubmit = true;
				if (registration.Email != null && !string.IsNullOrEmpty(registration.Name))
				{
					int? Id = await userService.GetUserIdAsync(registration.Name, registration.Email);
					await localStorageService.SetItemAsync("IdUser", Id.ToString());
					await localStorageService.SetItemAsync("UserName", registration.Name);
									
					// Notify all subscribed components
					await notificationService.NotifyAsync("registration", "Registration completed successfully!");
				}
			}
			else
			{
				invalidSubmit = true;
			}
		}
		else
		{
			invalidSubmit = true;
		}
	}
}